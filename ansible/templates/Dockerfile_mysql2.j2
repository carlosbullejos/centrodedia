# Etapa builder: genera el hash con PHP
FROM php:8.1-cli AS builder

ARG ADMIN_PASS=admin
RUN php -r "file_put_contents('/tmp/admin_hash', password_hash(getenv('ADMIN_PASS'), PASSWORD_DEFAULT));"

# Imagen final: MySQL
FROM mysql:8.0

# Variables por defecto (se pueden sobreescribir desde Kubernetes o --build-arg)
ARG MYSQL_DATABASE=mi_basedatos
ARG ADMIN_EMAIL=admin@centrodiabullejos.es
ARG ADMIN_PASS=admin

ENV MYSQL_DATABASE=${MYSQL_DATABASE}
ENV ADMIN_EMAIL=${ADMIN_EMAIL}
ENV ADMIN_PASS=${ADMIN_PASS}

EXPOSE 3306

# Copiar SQL de esquema (tablas y base de datos)
COPY init.sql /docker-entrypoint-initdb.d/00-schema.sql

# Copiar el hash generado desde el builder
COPY --from=builder /tmp/admin_hash /tmp/admin_hash

# Generar el script de inserciÃ³n del admin (sin heredoc)
RUN ADMIN_HASH="$(cat /tmp/admin_hash)" && \
    echo "USE \`${MYSQL_DATABASE}\`;" > /docker-entrypoint-initdb.d/01-admin-user.sql && \
    echo "" >> /docker-entrypoint-initdb.d/01-admin-user.sql && \
    echo "INSERT INTO users (nombre, email, password, ftp_password, rol)" >> /docker-entrypoint-initdb.d/01-admin-user.sql && \
    echo "SELECT 'admin', 'admin@centrodiabullejos.es', '${ADMIN_HASH}', '${ADMIN_PASS}', 'admin'" >> /docker-entrypoint-initdb.d/01-admin-user.sql && \
    echo "FROM DUAL" >> /docker-entrypoint-initdb.d/01-admin-user.sql && \
    echo "WHERE NOT EXISTS (" >> /docker-entrypoint-initdb.d/01-admin-user.sql && \
    echo "  SELECT 1 FROM users WHERE email='admin@centrodiabullejos.es'" >> /docker-entrypoint-initdb.d/01-admin-user.sql && \
    echo ");" >> /docker-entrypoint-initdb.d/01-admin-user.sql

# Usamos ENTRYPOINT/CMD originales de mysql:8.0
